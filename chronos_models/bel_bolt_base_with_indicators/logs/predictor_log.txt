Beginning AutoGluon training... Time limit = 600s
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       12.77 GB / 23.31 GB (54.8%)
Disk Space Avail:   357.69 GB / 931.51 GB (38.4%)
===================================================
Setting presets to: bolt_base

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': {'model_path': 'bolt_base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 30,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': True,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

Provided train_data has 260 rows (NaN fraction=31.2%), 1 time series. Median time series length is 260 (min=260, max=260). 

Provided data contains following columns:
	target: 'target'
	past_covariates:
		categorical:        []
		continuous (float): ['SMA_5', 'SMA_10', 'SMA_20', 'SMA_50', 'EMA_12', 'EMA_26', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-09-14 18:28:57
Models that will be trained: ['Chronos[bolt_base]']
Training timeseries model Chronos[bolt_base]. Training for up to 600.0s of the 600.0s of remaining time.
	0.01    s     = Training runtime
Training complete. Models trained: ['Chronos[bolt_base]']
Total runtime: 0.01 s
Best model: Chronos[bolt_base]
Model not specified in predict, will default to the model with the best validation score: Chronos[bolt_base]
Warning: path already exists! This predictor may overwrite an existing predictor! path="./chronos_models/bel_bolt_base_with_indicators"
Warning: path already exists! This predictor may overwrite an existing predictor! path="./chronos_models/bel_bolt_base_with_indicators"
Warning: path already exists! This predictor may overwrite an existing predictor! path="./chronos_models/bel_bolt_base_with_indicators"
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       12.18 GB / 23.31 GB (52.3%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       12.18 GB / 23.31 GB (52.3%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       12.18 GB / 23.31 GB (52.3%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
Setting presets to: bolt_base
Setting presets to: bolt_base
Setting presets to: bolt_base

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': {'model_path': 'bolt_base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 4,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': True,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': {'model_path': 'bolt_base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 4,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': True,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': {'model_path': 'bolt_base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 4,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': True,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

Provided train_data has 330 rows (NaN fraction=31.8%), 1 time series. Median time series length is 330 (min=330, max=330). 
Provided train_data has 330 rows (NaN fraction=31.8%), 1 time series. Median time series length is 330 (min=330, max=330). 
Provided train_data has 330 rows (NaN fraction=31.8%), 1 time series. Median time series length is 330 (min=330, max=330). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['RSI', 'RSI_7', 'stoch_k', 'stoch_d', 'williams_r', 'MACD', ...]
		continuous (float): ['RSI', 'RSI_7', 'stoch_k', 'stoch_d', 'williams_r', 'MACD', ...]
		continuous (float): ['RSI', 'RSI_7', 'stoch_k', 'stoch_d', 'williams_r', 'MACD', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================

Starting training. Start time is 2025-09-14 18:47:11

Starting training. Start time is 2025-09-14 18:47:11

Starting training. Start time is 2025-09-14 18:47:11
Models that will be trained: ['Chronos[bolt_base]']
Models that will be trained: ['Chronos[bolt_base]']
Models that will be trained: ['Chronos[bolt_base]']
Training timeseries model Chronos[bolt_base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[bolt_base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[bolt_base]. Training for up to 600.0s of the 600.0s of remaining time.
	0.01    s     = Training runtime
	0.01    s     = Training runtime
	0.01    s     = Training runtime
Training complete. Models trained: ['Chronos[bolt_base]']
Training complete. Models trained: ['Chronos[bolt_base]']
Training complete. Models trained: ['Chronos[bolt_base]']
Total runtime: 0.03 s
Total runtime: 0.03 s
Total runtime: 0.03 s
Best model: Chronos[bolt_base]
Best model: Chronos[bolt_base]
Best model: Chronos[bolt_base]
Model not specified in predict, will default to the model with the best validation score: Chronos[bolt_base]
Model not specified in predict, will default to the model with the best validation score: Chronos[bolt_base]
Model not specified in predict, will default to the model with the best validation score: Chronos[bolt_base]
Warning: path already exists! This predictor may overwrite an existing predictor! path="./chronos_models/bel_bolt_base_with_indicators"
Warning: path already exists! This predictor may overwrite an existing predictor! path="./chronos_models/bel_bolt_base_with_indicators"
Warning: path already exists! This predictor may overwrite an existing predictor! path="./chronos_models/bel_bolt_base_with_indicators"
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       12.18 GB / 23.31 GB (52.2%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       12.18 GB / 23.31 GB (52.2%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       12.18 GB / 23.31 GB (52.2%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       12.18 GB / 23.31 GB (52.2%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
Setting presets to: bolt_base
Setting presets to: bolt_base
Setting presets to: bolt_base
Setting presets to: bolt_base

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': {'model_path': 'bolt_base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 4,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': True,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': {'model_path': 'bolt_base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 4,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': True,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': {'model_path': 'bolt_base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 4,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': True,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': {'model_path': 'bolt_base'}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 4,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': True,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

Provided train_data has 358 rows (NaN fraction=31.8%), 1 time series. Median time series length is 358 (min=358, max=358). 
Provided train_data has 358 rows (NaN fraction=31.8%), 1 time series. Median time series length is 358 (min=358, max=358). 
Provided train_data has 358 rows (NaN fraction=31.8%), 1 time series. Median time series length is 358 (min=358, max=358). 
Provided train_data has 358 rows (NaN fraction=31.8%), 1 time series. Median time series length is 358 (min=358, max=358). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-09-14 18:50:08

Starting training. Start time is 2025-09-14 18:50:08

Starting training. Start time is 2025-09-14 18:50:08

Starting training. Start time is 2025-09-14 18:50:08
Models that will be trained: ['Chronos[bolt_base]']
Models that will be trained: ['Chronos[bolt_base]']
Models that will be trained: ['Chronos[bolt_base]']
Models that will be trained: ['Chronos[bolt_base]']
Training timeseries model Chronos[bolt_base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[bolt_base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[bolt_base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model Chronos[bolt_base]. Training for up to 600.0s of the 600.0s of remaining time.
	0.01    s     = Training runtime
	0.01    s     = Training runtime
	0.01    s     = Training runtime
	0.01    s     = Training runtime
Training complete. Models trained: ['Chronos[bolt_base]']
Training complete. Models trained: ['Chronos[bolt_base]']
Training complete. Models trained: ['Chronos[bolt_base]']
Training complete. Models trained: ['Chronos[bolt_base]']
Total runtime: 0.03 s
Total runtime: 0.03 s
Total runtime: 0.03 s
Total runtime: 0.03 s
Best model: Chronos[bolt_base]
Best model: Chronos[bolt_base]
Best model: Chronos[bolt_base]
Best model: Chronos[bolt_base]
Model not specified in predict, will default to the model with the best validation score: Chronos[bolt_base]
Model not specified in predict, will default to the model with the best validation score: Chronos[bolt_base]
Model not specified in predict, will default to the model with the best validation score: Chronos[bolt_base]
Model not specified in predict, will default to the model with the best validation score: Chronos[bolt_base]
Warning: path already exists! This predictor may overwrite an existing predictor! path="./chronos_models/bel_bolt_base_with_indicators"
Warning: path already exists! This predictor may overwrite an existing predictor! path="./chronos_models/bel_bolt_base_with_indicators"
Warning: path already exists! This predictor may overwrite an existing predictor! path="./chronos_models/bel_bolt_base_with_indicators"
Warning: path already exists! This predictor may overwrite an existing predictor! path="./chronos_models/bel_bolt_base_with_indicators"
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       12.37 GB / 23.31 GB (53.1%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       12.37 GB / 23.31 GB (53.1%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       12.37 GB / 23.31 GB (53.1%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       12.37 GB / 23.31 GB (53.1%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       12.37 GB / 23.31 GB (53.1%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
Setting presets to: bolt_base
Setting presets to: bolt_base
Setting presets to: bolt_base
Setting presets to: bolt_base
Setting presets to: bolt_base

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': [{'ag_args': {'name_suffix': 'ZeroShot'},
                                  'model_path': 'bolt_base'}]},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 4,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': True,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': [{'ag_args': {'name_suffix': 'ZeroShot'},
                                  'model_path': 'bolt_base'}]},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 4,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': True,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': [{'ag_args': {'name_suffix': 'ZeroShot'},
                                  'model_path': 'bolt_base'}]},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 4,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': True,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': [{'ag_args': {'name_suffix': 'ZeroShot'},
                                  'model_path': 'bolt_base'}]},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 4,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': True,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': [{'ag_args': {'name_suffix': 'ZeroShot'},
                                  'model_path': 'bolt_base'}]},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 4,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': True,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

Provided train_data has 358 rows (NaN fraction=31.8%), 1 time series. Median time series length is 358 (min=358, max=358). 
Provided train_data has 358 rows (NaN fraction=31.8%), 1 time series. Median time series length is 358 (min=358, max=358). 
Provided train_data has 358 rows (NaN fraction=31.8%), 1 time series. Median time series length is 358 (min=358, max=358). 
Provided train_data has 358 rows (NaN fraction=31.8%), 1 time series. Median time series length is 358 (min=358, max=358). 
Provided train_data has 358 rows (NaN fraction=31.8%), 1 time series. Median time series length is 358 (min=358, max=358). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-09-14 18:51:38

Starting training. Start time is 2025-09-14 18:51:38

Starting training. Start time is 2025-09-14 18:51:38

Starting training. Start time is 2025-09-14 18:51:38

Starting training. Start time is 2025-09-14 18:51:38
Models that will be trained: ['ChronosZeroShot[bolt_base]']
Models that will be trained: ['ChronosZeroShot[bolt_base]']
Models that will be trained: ['ChronosZeroShot[bolt_base]']
Models that will be trained: ['ChronosZeroShot[bolt_base]']
Models that will be trained: ['ChronosZeroShot[bolt_base]']
Training timeseries model ChronosZeroShot[bolt_base]. Training for up to 599.9s of the 599.9s of remaining time.
Training timeseries model ChronosZeroShot[bolt_base]. Training for up to 599.9s of the 599.9s of remaining time.
Training timeseries model ChronosZeroShot[bolt_base]. Training for up to 599.9s of the 599.9s of remaining time.
Training timeseries model ChronosZeroShot[bolt_base]. Training for up to 599.9s of the 599.9s of remaining time.
Training timeseries model ChronosZeroShot[bolt_base]. Training for up to 599.9s of the 599.9s of remaining time.
	0.01    s     = Training runtime
	0.01    s     = Training runtime
	0.01    s     = Training runtime
	0.01    s     = Training runtime
	0.01    s     = Training runtime
Training complete. Models trained: ['ChronosZeroShot[bolt_base]']
Training complete. Models trained: ['ChronosZeroShot[bolt_base]']
Training complete. Models trained: ['ChronosZeroShot[bolt_base]']
Training complete. Models trained: ['ChronosZeroShot[bolt_base]']
Training complete. Models trained: ['ChronosZeroShot[bolt_base]']
Total runtime: 0.02 s
Total runtime: 0.02 s
Total runtime: 0.02 s
Total runtime: 0.02 s
Total runtime: 0.02 s
Best model: ChronosZeroShot[bolt_base]
Best model: ChronosZeroShot[bolt_base]
Best model: ChronosZeroShot[bolt_base]
Best model: ChronosZeroShot[bolt_base]
Best model: ChronosZeroShot[bolt_base]
Model not specified in predict, will default to the model with the best validation score: ChronosZeroShot[bolt_base]
Model not specified in predict, will default to the model with the best validation score: ChronosZeroShot[bolt_base]
Model not specified in predict, will default to the model with the best validation score: ChronosZeroShot[bolt_base]
Model not specified in predict, will default to the model with the best validation score: ChronosZeroShot[bolt_base]
Model not specified in predict, will default to the model with the best validation score: ChronosZeroShot[bolt_base]
Warning: path already exists! This predictor may overwrite an existing predictor! path="./chronos_models/bel_bolt_base_with_indicators"
Warning: path already exists! This predictor may overwrite an existing predictor! path="./chronos_models/bel_bolt_base_with_indicators"
Warning: path already exists! This predictor may overwrite an existing predictor! path="./chronos_models/bel_bolt_base_with_indicators"
Warning: path already exists! This predictor may overwrite an existing predictor! path="./chronos_models/bel_bolt_base_with_indicators"
Warning: path already exists! This predictor may overwrite an existing predictor! path="./chronos_models/bel_bolt_base_with_indicators"
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       12.30 GB / 23.31 GB (52.8%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       12.30 GB / 23.31 GB (52.8%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       12.30 GB / 23.31 GB (52.8%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       12.30 GB / 23.31 GB (52.8%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       12.30 GB / 23.31 GB (52.8%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       12.30 GB / 23.31 GB (52.8%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
Setting presets to: bolt_base
Setting presets to: bolt_base
Setting presets to: bolt_base
Setting presets to: bolt_base
Setting presets to: bolt_base
Setting presets to: bolt_base

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': [{'ag_args': {'name_suffix': 'ZeroShot'},
                                  'model_path': 'bolt_base'},
                                 {'ag_args': {'name_suffix': 'WithRegressor'},
                                  'covariate_regressor': 'CAT',
                                  'model_path': 'bolt_base',
                                  'target_scaler': 'standard'}]},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 4,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': True,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': [{'ag_args': {'name_suffix': 'ZeroShot'},
                                  'model_path': 'bolt_base'},
                                 {'ag_args': {'name_suffix': 'WithRegressor'},
                                  'covariate_regressor': 'CAT',
                                  'model_path': 'bolt_base',
                                  'target_scaler': 'standard'}]},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 4,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': True,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': [{'ag_args': {'name_suffix': 'ZeroShot'},
                                  'model_path': 'bolt_base'},
                                 {'ag_args': {'name_suffix': 'WithRegressor'},
                                  'covariate_regressor': 'CAT',
                                  'model_path': 'bolt_base',
                                  'target_scaler': 'standard'}]},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 4,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': True,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': [{'ag_args': {'name_suffix': 'ZeroShot'},
                                  'model_path': 'bolt_base'},
                                 {'ag_args': {'name_suffix': 'WithRegressor'},
                                  'covariate_regressor': 'CAT',
                                  'model_path': 'bolt_base',
                                  'target_scaler': 'standard'}]},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 4,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': True,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': [{'ag_args': {'name_suffix': 'ZeroShot'},
                                  'model_path': 'bolt_base'},
                                 {'ag_args': {'name_suffix': 'WithRegressor'},
                                  'covariate_regressor': 'CAT',
                                  'model_path': 'bolt_base',
                                  'target_scaler': 'standard'}]},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 4,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': True,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': [{'ag_args': {'name_suffix': 'ZeroShot'},
                                  'model_path': 'bolt_base'},
                                 {'ag_args': {'name_suffix': 'WithRegressor'},
                                  'covariate_regressor': 'CAT',
                                  'model_path': 'bolt_base',
                                  'target_scaler': 'standard'}]},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 4,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': True,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

Provided train_data has 358 rows (NaN fraction=31.8%), 1 time series. Median time series length is 358 (min=358, max=358). 
Provided train_data has 358 rows (NaN fraction=31.8%), 1 time series. Median time series length is 358 (min=358, max=358). 
Provided train_data has 358 rows (NaN fraction=31.8%), 1 time series. Median time series length is 358 (min=358, max=358). 
Provided train_data has 358 rows (NaN fraction=31.8%), 1 time series. Median time series length is 358 (min=358, max=358). 
Provided train_data has 358 rows (NaN fraction=31.8%), 1 time series. Median time series length is 358 (min=358, max=358). 
Provided train_data has 358 rows (NaN fraction=31.8%), 1 time series. Median time series length is 358 (min=358, max=358). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-09-14 18:52:58

Starting training. Start time is 2025-09-14 18:52:58

Starting training. Start time is 2025-09-14 18:52:58

Starting training. Start time is 2025-09-14 18:52:58

Starting training. Start time is 2025-09-14 18:52:58

Starting training. Start time is 2025-09-14 18:52:58
Models that will be trained: ['ChronosZeroShot[bolt_base]', 'ChronosWithRegressor[bolt_base]']
Models that will be trained: ['ChronosZeroShot[bolt_base]', 'ChronosWithRegressor[bolt_base]']
Models that will be trained: ['ChronosZeroShot[bolt_base]', 'ChronosWithRegressor[bolt_base]']
Models that will be trained: ['ChronosZeroShot[bolt_base]', 'ChronosWithRegressor[bolt_base]']
Models that will be trained: ['ChronosZeroShot[bolt_base]', 'ChronosWithRegressor[bolt_base]']
Models that will be trained: ['ChronosZeroShot[bolt_base]', 'ChronosWithRegressor[bolt_base]']
Warning: path already exists! This predictor may overwrite an existing predictor! path="./chronos_models/bel_bolt_base_with_indicators"
Warning: path already exists! This predictor may overwrite an existing predictor! path="./chronos_models/bel_bolt_base_with_indicators"
Warning: path already exists! This predictor may overwrite an existing predictor! path="./chronos_models/bel_bolt_base_with_indicators"
Warning: path already exists! This predictor may overwrite an existing predictor! path="./chronos_models/bel_bolt_base_with_indicators"
Warning: path already exists! This predictor may overwrite an existing predictor! path="./chronos_models/bel_bolt_base_with_indicators"
Warning: path already exists! This predictor may overwrite an existing predictor! path="./chronos_models/bel_bolt_base_with_indicators"
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       12.37 GB / 23.31 GB (53.1%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       12.37 GB / 23.31 GB (53.1%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       12.37 GB / 23.31 GB (53.1%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       12.37 GB / 23.31 GB (53.1%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       12.37 GB / 23.31 GB (53.1%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       12.37 GB / 23.31 GB (53.1%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       12.37 GB / 23.31 GB (53.1%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
Setting presets to: bolt_base
Setting presets to: bolt_base
Setting presets to: bolt_base
Setting presets to: bolt_base
Setting presets to: bolt_base
Setting presets to: bolt_base
Setting presets to: bolt_base

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': [{'ag_args': {'name_suffix': 'ZeroShot'},
                                  'model_path': 'bolt_base'},
                                 {'ag_args': {'name_suffix': 'WithRegressor'},
                                  'covariate_regressor': 'CAT',
                                  'model_path': 'bolt_base',
                                  'target_scaler': 'standard'}]},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 4,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': [{'ag_args': {'name_suffix': 'ZeroShot'},
                                  'model_path': 'bolt_base'},
                                 {'ag_args': {'name_suffix': 'WithRegressor'},
                                  'covariate_regressor': 'CAT',
                                  'model_path': 'bolt_base',
                                  'target_scaler': 'standard'}]},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 4,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': [{'ag_args': {'name_suffix': 'ZeroShot'},
                                  'model_path': 'bolt_base'},
                                 {'ag_args': {'name_suffix': 'WithRegressor'},
                                  'covariate_regressor': 'CAT',
                                  'model_path': 'bolt_base',
                                  'target_scaler': 'standard'}]},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 4,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': [{'ag_args': {'name_suffix': 'ZeroShot'},
                                  'model_path': 'bolt_base'},
                                 {'ag_args': {'name_suffix': 'WithRegressor'},
                                  'covariate_regressor': 'CAT',
                                  'model_path': 'bolt_base',
                                  'target_scaler': 'standard'}]},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 4,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': [{'ag_args': {'name_suffix': 'ZeroShot'},
                                  'model_path': 'bolt_base'},
                                 {'ag_args': {'name_suffix': 'WithRegressor'},
                                  'covariate_regressor': 'CAT',
                                  'model_path': 'bolt_base',
                                  'target_scaler': 'standard'}]},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 4,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': [{'ag_args': {'name_suffix': 'ZeroShot'},
                                  'model_path': 'bolt_base'},
                                 {'ag_args': {'name_suffix': 'WithRegressor'},
                                  'covariate_regressor': 'CAT',
                                  'model_path': 'bolt_base',
                                  'target_scaler': 'standard'}]},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 4,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': [{'ag_args': {'name_suffix': 'ZeroShot'},
                                  'model_path': 'bolt_base'},
                                 {'ag_args': {'name_suffix': 'WithRegressor'},
                                  'covariate_regressor': 'CAT',
                                  'model_path': 'bolt_base',
                                  'target_scaler': 'standard'}]},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 4,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

Provided train_data has 358 rows (NaN fraction=31.8%), 1 time series. Median time series length is 358 (min=358, max=358). 
Provided train_data has 358 rows (NaN fraction=31.8%), 1 time series. Median time series length is 358 (min=358, max=358). 
Provided train_data has 358 rows (NaN fraction=31.8%), 1 time series. Median time series length is 358 (min=358, max=358). 
Provided train_data has 358 rows (NaN fraction=31.8%), 1 time series. Median time series length is 358 (min=358, max=358). 
Provided train_data has 358 rows (NaN fraction=31.8%), 1 time series. Median time series length is 358 (min=358, max=358). 
Provided train_data has 358 rows (NaN fraction=31.8%), 1 time series. Median time series length is 358 (min=358, max=358). 
Provided train_data has 358 rows (NaN fraction=31.8%), 1 time series. Median time series length is 358 (min=358, max=358). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-09-14 18:53:14

Starting training. Start time is 2025-09-14 18:53:14

Starting training. Start time is 2025-09-14 18:53:14

Starting training. Start time is 2025-09-14 18:53:14

Starting training. Start time is 2025-09-14 18:53:14

Starting training. Start time is 2025-09-14 18:53:14

Starting training. Start time is 2025-09-14 18:53:14
Models that will be trained: ['ChronosZeroShot[bolt_base]', 'ChronosWithRegressor[bolt_base]']
Models that will be trained: ['ChronosZeroShot[bolt_base]', 'ChronosWithRegressor[bolt_base]']
Models that will be trained: ['ChronosZeroShot[bolt_base]', 'ChronosWithRegressor[bolt_base]']
Models that will be trained: ['ChronosZeroShot[bolt_base]', 'ChronosWithRegressor[bolt_base]']
Models that will be trained: ['ChronosZeroShot[bolt_base]', 'ChronosWithRegressor[bolt_base]']
Models that will be trained: ['ChronosZeroShot[bolt_base]', 'ChronosWithRegressor[bolt_base]']
Models that will be trained: ['ChronosZeroShot[bolt_base]', 'ChronosWithRegressor[bolt_base]']
Training timeseries model ChronosZeroShot[bolt_base]. Training for up to 200.0s of the 600.0s of remaining time.
Training timeseries model ChronosZeroShot[bolt_base]. Training for up to 200.0s of the 600.0s of remaining time.
Training timeseries model ChronosZeroShot[bolt_base]. Training for up to 200.0s of the 600.0s of remaining time.
Training timeseries model ChronosZeroShot[bolt_base]. Training for up to 200.0s of the 600.0s of remaining time.
Training timeseries model ChronosZeroShot[bolt_base]. Training for up to 200.0s of the 600.0s of remaining time.
Training timeseries model ChronosZeroShot[bolt_base]. Training for up to 200.0s of the 600.0s of remaining time.
Training timeseries model ChronosZeroShot[bolt_base]. Training for up to 200.0s of the 600.0s of remaining time.
	-0.0061       = Validation score (-WQL)
	-0.0061       = Validation score (-WQL)
	-0.0061       = Validation score (-WQL)
	-0.0061       = Validation score (-WQL)
	-0.0061       = Validation score (-WQL)
	-0.0061       = Validation score (-WQL)
	-0.0061       = Validation score (-WQL)
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	1.82    s     = Validation (prediction) runtime
	1.82    s     = Validation (prediction) runtime
	1.82    s     = Validation (prediction) runtime
	1.82    s     = Validation (prediction) runtime
	1.82    s     = Validation (prediction) runtime
	1.82    s     = Validation (prediction) runtime
	1.82    s     = Validation (prediction) runtime
Training timeseries model ChronosWithRegressor[bolt_base]. Training for up to 299.1s of the 598.1s of remaining time.
Training timeseries model ChronosWithRegressor[bolt_base]. Training for up to 299.1s of the 598.1s of remaining time.
Training timeseries model ChronosWithRegressor[bolt_base]. Training for up to 299.1s of the 598.1s of remaining time.
Training timeseries model ChronosWithRegressor[bolt_base]. Training for up to 299.1s of the 598.1s of remaining time.
Training timeseries model ChronosWithRegressor[bolt_base]. Training for up to 299.1s of the 598.1s of remaining time.
Training timeseries model ChronosWithRegressor[bolt_base]. Training for up to 299.1s of the 598.1s of remaining time.
Training timeseries model ChronosWithRegressor[bolt_base]. Training for up to 299.1s of the 598.1s of remaining time.
	Skipping covariate_regressor since the dataset contains no known_covariates or static_features.
	Skipping covariate_regressor since the dataset contains no known_covariates or static_features.
	Skipping covariate_regressor since the dataset contains no known_covariates or static_features.
	Skipping covariate_regressor since the dataset contains no known_covariates or static_features.
	Skipping covariate_regressor since the dataset contains no known_covariates or static_features.
	Skipping covariate_regressor since the dataset contains no known_covariates or static_features.
	Skipping covariate_regressor since the dataset contains no known_covariates or static_features.
	-0.0061       = Validation score (-WQL)
	-0.0061       = Validation score (-WQL)
	-0.0061       = Validation score (-WQL)
	-0.0061       = Validation score (-WQL)
	-0.0061       = Validation score (-WQL)
	-0.0061       = Validation score (-WQL)
	-0.0061       = Validation score (-WQL)
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	1.91    s     = Validation (prediction) runtime
	1.91    s     = Validation (prediction) runtime
	1.91    s     = Validation (prediction) runtime
	1.91    s     = Validation (prediction) runtime
	1.91    s     = Validation (prediction) runtime
	1.91    s     = Validation (prediction) runtime
	1.91    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'ChronosZeroShot[bolt_base]': 1.0}
	Ensemble weights: {'ChronosZeroShot[bolt_base]': 1.0}
	Ensemble weights: {'ChronosZeroShot[bolt_base]': 1.0}
	Ensemble weights: {'ChronosZeroShot[bolt_base]': 1.0}
	Ensemble weights: {'ChronosZeroShot[bolt_base]': 1.0}
	Ensemble weights: {'ChronosZeroShot[bolt_base]': 1.0}
	Ensemble weights: {'ChronosZeroShot[bolt_base]': 1.0}
	-0.0061       = Validation score (-WQL)
	-0.0061       = Validation score (-WQL)
	-0.0061       = Validation score (-WQL)
	-0.0061       = Validation score (-WQL)
	-0.0061       = Validation score (-WQL)
	-0.0061       = Validation score (-WQL)
	-0.0061       = Validation score (-WQL)
	0.27    s     = Training runtime
	0.27    s     = Training runtime
	0.27    s     = Training runtime
	0.27    s     = Training runtime
	0.27    s     = Training runtime
	0.27    s     = Training runtime
	0.27    s     = Training runtime
	1.82    s     = Validation (prediction) runtime
	1.82    s     = Validation (prediction) runtime
	1.82    s     = Validation (prediction) runtime
	1.82    s     = Validation (prediction) runtime
	1.82    s     = Validation (prediction) runtime
	1.82    s     = Validation (prediction) runtime
	1.82    s     = Validation (prediction) runtime
Training complete. Models trained: ['ChronosZeroShot[bolt_base]', 'ChronosWithRegressor[bolt_base]', 'WeightedEnsemble']
Training complete. Models trained: ['ChronosZeroShot[bolt_base]', 'ChronosWithRegressor[bolt_base]', 'WeightedEnsemble']
Training complete. Models trained: ['ChronosZeroShot[bolt_base]', 'ChronosWithRegressor[bolt_base]', 'WeightedEnsemble']
Training complete. Models trained: ['ChronosZeroShot[bolt_base]', 'ChronosWithRegressor[bolt_base]', 'WeightedEnsemble']
Training complete. Models trained: ['ChronosZeroShot[bolt_base]', 'ChronosWithRegressor[bolt_base]', 'WeightedEnsemble']
Training complete. Models trained: ['ChronosZeroShot[bolt_base]', 'ChronosWithRegressor[bolt_base]', 'WeightedEnsemble']
Training complete. Models trained: ['ChronosZeroShot[bolt_base]', 'ChronosWithRegressor[bolt_base]', 'WeightedEnsemble']
Total runtime: 4.09 s
Total runtime: 4.09 s
Total runtime: 4.09 s
Total runtime: 4.09 s
Total runtime: 4.09 s
Total runtime: 4.09 s
Total runtime: 4.09 s
Best model: ChronosZeroShot[bolt_base]
Best model: ChronosZeroShot[bolt_base]
Best model: ChronosZeroShot[bolt_base]
Best model: ChronosZeroShot[bolt_base]
Best model: ChronosZeroShot[bolt_base]
Best model: ChronosZeroShot[bolt_base]
Best model: ChronosZeroShot[bolt_base]
Best model score: -0.0061
Best model score: -0.0061
Best model score: -0.0061
Best model score: -0.0061
Best model score: -0.0061
Best model score: -0.0061
Best model score: -0.0061
Model not specified in predict, will default to the model with the best validation score: ChronosZeroShot[bolt_base]
Model not specified in predict, will default to the model with the best validation score: ChronosZeroShot[bolt_base]
Model not specified in predict, will default to the model with the best validation score: ChronosZeroShot[bolt_base]
Model not specified in predict, will default to the model with the best validation score: ChronosZeroShot[bolt_base]
Model not specified in predict, will default to the model with the best validation score: ChronosZeroShot[bolt_base]
Model not specified in predict, will default to the model with the best validation score: ChronosZeroShot[bolt_base]
Model not specified in predict, will default to the model with the best validation score: ChronosZeroShot[bolt_base]
Beginning AutoGluon training... Time limit = 600s
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       13.32 GB / 23.31 GB (57.1%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
Setting presets to: bolt_base

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': [{'ag_args': {'name_suffix': 'ZeroShot'},
                                  'model_path': 'bolt_base'},
                                 {'ag_args': {'name_suffix': 'WithRegressor'},
                                  'covariate_regressor': 'CAT',
                                  'model_path': 'bolt_base',
                                  'target_scaler': 'standard'}]},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 10,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

Provided train_data has 324 rows (NaN fraction=31.8%), 1 time series. Median time series length is 324 (min=324, max=324). 

Provided data contains following columns:
	target: 'target'
	past_covariates:
		categorical:        []
		continuous (float): ['RSI', 'RSI_7', 'stoch_k', 'stoch_d', 'williams_r', 'MACD', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-09-14 18:55:08
Models that will be trained: ['ChronosZeroShot[bolt_base]', 'ChronosWithRegressor[bolt_base]']
Training timeseries model ChronosZeroShot[bolt_base]. Training for up to 199.1s of the 597.4s of remaining time.
	-0.0135       = Validation score (-WQL)
	2.36    s     = Training runtime
	2.60    s     = Validation (prediction) runtime
Training timeseries model ChronosWithRegressor[bolt_base]. Training for up to 296.2s of the 592.5s of remaining time.
	Skipping covariate_regressor since the dataset contains no known_covariates or static_features.
	-0.0135       = Validation score (-WQL)
	0.02    s     = Training runtime
	1.96    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
	Ensemble weights: {'ChronosZeroShot[bolt_base]': 1.0}
	-0.0135       = Validation score (-WQL)
	0.38    s     = Training runtime
	2.60    s     = Validation (prediction) runtime
Training complete. Models trained: ['ChronosZeroShot[bolt_base]', 'ChronosWithRegressor[bolt_base]', 'WeightedEnsemble']
Total runtime: 7.36 s
Best model: ChronosZeroShot[bolt_base]
Best model score: -0.0135
Model not specified in predict, will default to the model with the best validation score: ChronosZeroShot[bolt_base]
Warning: path already exists! This predictor may overwrite an existing predictor! path="./chronos_models/bel_bolt_base_with_indicators"
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       12.52 GB / 23.31 GB (53.7%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       12.52 GB / 23.31 GB (53.7%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
Setting presets to: bolt_base
Setting presets to: bolt_base

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': [{'ag_args': {'name_suffix': 'ZeroShot'},
                                  'model_path': 'bolt_base'},
                                 {'ag_args': {'name_suffix': 'WithRegressor'},
                                  'covariate_regressor': 'CAT',
                                  'model_path': 'bolt_base',
                                  'target_scaler': 'standard'}]},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 10,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': [{'ag_args': {'name_suffix': 'ZeroShot'},
                                  'model_path': 'bolt_base'},
                                 {'ag_args': {'name_suffix': 'WithRegressor'},
                                  'covariate_regressor': 'CAT',
                                  'model_path': 'bolt_base',
                                  'target_scaler': 'standard'}]},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 10,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

Provided train_data has 324 rows (NaN fraction=31.8%), 1 time series. Median time series length is 324 (min=324, max=324). 
Provided train_data has 324 rows (NaN fraction=31.8%), 1 time series. Median time series length is 324 (min=324, max=324). 

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		continuous (float): ['RSI', 'RSI_7', 'stoch_k', 'stoch_d', 'williams_r', 'MACD', ...]
		continuous (float): ['RSI', 'RSI_7', 'stoch_k', 'stoch_d', 'williams_r', 'MACD', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================

Starting training. Start time is 2025-09-14 18:59:03

Starting training. Start time is 2025-09-14 18:59:03
Models that will be trained: ['ChronosZeroShot[bolt_base]', 'ChronosWithRegressor[bolt_base]']
Models that will be trained: ['ChronosZeroShot[bolt_base]', 'ChronosWithRegressor[bolt_base]']
Training timeseries model ChronosZeroShot[bolt_base]. Training for up to 200.0s of the 600.0s of remaining time.
Training timeseries model ChronosZeroShot[bolt_base]. Training for up to 200.0s of the 600.0s of remaining time.
	-0.0135       = Validation score (-WQL)
	-0.0135       = Validation score (-WQL)
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	1.86    s     = Validation (prediction) runtime
	1.86    s     = Validation (prediction) runtime
Training timeseries model ChronosWithRegressor[bolt_base]. Training for up to 299.0s of the 598.1s of remaining time.
Training timeseries model ChronosWithRegressor[bolt_base]. Training for up to 299.0s of the 598.1s of remaining time.
	Skipping covariate_regressor since the dataset contains no known_covariates or static_features.
	Skipping covariate_regressor since the dataset contains no known_covariates or static_features.
	-0.0135       = Validation score (-WQL)
	-0.0135       = Validation score (-WQL)
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	2.21    s     = Validation (prediction) runtime
	2.21    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
Fitting simple weighted ensemble.
	Ensemble weights: {'ChronosZeroShot[bolt_base]': 1.0}
	Ensemble weights: {'ChronosZeroShot[bolt_base]': 1.0}
	-0.0135       = Validation score (-WQL)
	-0.0135       = Validation score (-WQL)
	0.25    s     = Training runtime
	0.25    s     = Training runtime
	1.86    s     = Validation (prediction) runtime
	1.86    s     = Validation (prediction) runtime
Training complete. Models trained: ['ChronosZeroShot[bolt_base]', 'ChronosWithRegressor[bolt_base]', 'WeightedEnsemble']
Training complete. Models trained: ['ChronosZeroShot[bolt_base]', 'ChronosWithRegressor[bolt_base]', 'WeightedEnsemble']
Total runtime: 4.40 s
Total runtime: 4.40 s
Best model: ChronosZeroShot[bolt_base]
Best model: ChronosZeroShot[bolt_base]
Best model score: -0.0135
Best model score: -0.0135
Model not specified in predict, will default to the model with the best validation score: ChronosZeroShot[bolt_base]
Model not specified in predict, will default to the model with the best validation score: ChronosZeroShot[bolt_base]
Warning: path already exists! This predictor may overwrite an existing predictor! path="./chronos_models/bel_bolt_base_with_indicators"
Warning: path already exists! This predictor may overwrite an existing predictor! path="./chronos_models/bel_bolt_base_with_indicators"
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       12.17 GB / 23.31 GB (52.2%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       12.17 GB / 23.31 GB (52.2%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       12.17 GB / 23.31 GB (52.2%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
Setting presets to: bolt_base
Setting presets to: bolt_base
Setting presets to: bolt_base

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': [{'ag_args': {'name_suffix': 'ZeroShot'},
                                  'model_path': 'bolt_base'}]},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 10,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': [{'ag_args': {'name_suffix': 'ZeroShot'},
                                  'model_path': 'bolt_base'}]},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 10,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': [{'ag_args': {'name_suffix': 'ZeroShot'},
                                  'model_path': 'bolt_base'}]},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 10,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

Provided train_data has 324 rows (NaN fraction=31.8%), 1 time series. Median time series length is 324 (min=324, max=324). 
Provided train_data has 324 rows (NaN fraction=31.8%), 1 time series. Median time series length is 324 (min=324, max=324). 
Provided train_data has 324 rows (NaN fraction=31.8%), 1 time series. Median time series length is 324 (min=324, max=324). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['RSI', 'RSI_7', 'stoch_k', 'stoch_d', 'williams_r', 'MACD', ...]
		continuous (float): ['RSI', 'RSI_7', 'stoch_k', 'stoch_d', 'williams_r', 'MACD', ...]
		continuous (float): ['RSI', 'RSI_7', 'stoch_k', 'stoch_d', 'williams_r', 'MACD', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================

Starting training. Start time is 2025-09-14 18:59:45

Starting training. Start time is 2025-09-14 18:59:45

Starting training. Start time is 2025-09-14 18:59:45
Models that will be trained: ['ChronosZeroShot[bolt_base]']
Models that will be trained: ['ChronosZeroShot[bolt_base]']
Models that will be trained: ['ChronosZeroShot[bolt_base]']
Training timeseries model ChronosZeroShot[bolt_base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model ChronosZeroShot[bolt_base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model ChronosZeroShot[bolt_base]. Training for up to 600.0s of the 600.0s of remaining time.
	-0.0135       = Validation score (-WQL)
	-0.0135       = Validation score (-WQL)
	-0.0135       = Validation score (-WQL)
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	2.02    s     = Validation (prediction) runtime
	2.02    s     = Validation (prediction) runtime
	2.02    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ChronosZeroShot[bolt_base]']
Training complete. Models trained: ['ChronosZeroShot[bolt_base]']
Training complete. Models trained: ['ChronosZeroShot[bolt_base]']
Total runtime: 2.06 s
Total runtime: 2.06 s
Total runtime: 2.06 s
Best model: ChronosZeroShot[bolt_base]
Best model: ChronosZeroShot[bolt_base]
Best model: ChronosZeroShot[bolt_base]
Best model score: -0.0135
Best model score: -0.0135
Best model score: -0.0135
Model not specified in predict, will default to the model with the best validation score: ChronosZeroShot[bolt_base]
Model not specified in predict, will default to the model with the best validation score: ChronosZeroShot[bolt_base]
Model not specified in predict, will default to the model with the best validation score: ChronosZeroShot[bolt_base]
Warning: path already exists! This predictor may overwrite an existing predictor! path="./chronos_models/bel_bolt_base_with_indicators"
Warning: path already exists! This predictor may overwrite an existing predictor! path="./chronos_models/bel_bolt_base_with_indicators"
Warning: path already exists! This predictor may overwrite an existing predictor! path="./chronos_models/bel_bolt_base_with_indicators"
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       11.33 GB / 23.31 GB (48.6%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       11.33 GB / 23.31 GB (48.6%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       11.33 GB / 23.31 GB (48.6%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       11.33 GB / 23.31 GB (48.6%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
Setting presets to: bolt_base
Setting presets to: bolt_base
Setting presets to: bolt_base
Setting presets to: bolt_base

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': [{'ag_args': {'name_suffix': 'ZeroShot'},
                                  'model_path': 'bolt_base'}]},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': [{'ag_args': {'name_suffix': 'ZeroShot'},
                                  'model_path': 'bolt_base'}]},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': [{'ag_args': {'name_suffix': 'ZeroShot'},
                                  'model_path': 'bolt_base'}]},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': [{'ag_args': {'name_suffix': 'ZeroShot'},
                                  'model_path': 'bolt_base'}]},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 20,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

Provided train_data has 314 rows (NaN fraction=31.5%), 1 time series. Median time series length is 314 (min=314, max=314). 
Provided train_data has 314 rows (NaN fraction=31.5%), 1 time series. Median time series length is 314 (min=314, max=314). 
Provided train_data has 314 rows (NaN fraction=31.5%), 1 time series. Median time series length is 314 (min=314, max=314). 
Provided train_data has 314 rows (NaN fraction=31.5%), 1 time series. Median time series length is 314 (min=314, max=314). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['RSI', 'RSI_7', 'stoch_k', 'stoch_d', 'williams_r', 'MACD', ...]
		continuous (float): ['RSI', 'RSI_7', 'stoch_k', 'stoch_d', 'williams_r', 'MACD', ...]
		continuous (float): ['RSI', 'RSI_7', 'stoch_k', 'stoch_d', 'williams_r', 'MACD', ...]
		continuous (float): ['RSI', 'RSI_7', 'stoch_k', 'stoch_d', 'williams_r', 'MACD', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-09-14 19:06:59

Starting training. Start time is 2025-09-14 19:06:59

Starting training. Start time is 2025-09-14 19:06:59

Starting training. Start time is 2025-09-14 19:06:59
Models that will be trained: ['ChronosZeroShot[bolt_base]']
Models that will be trained: ['ChronosZeroShot[bolt_base]']
Models that will be trained: ['ChronosZeroShot[bolt_base]']
Models that will be trained: ['ChronosZeroShot[bolt_base]']
Training timeseries model ChronosZeroShot[bolt_base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model ChronosZeroShot[bolt_base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model ChronosZeroShot[bolt_base]. Training for up to 600.0s of the 600.0s of remaining time.
Training timeseries model ChronosZeroShot[bolt_base]. Training for up to 600.0s of the 600.0s of remaining time.
	-0.0281       = Validation score (-WQL)
	-0.0281       = Validation score (-WQL)
	-0.0281       = Validation score (-WQL)
	-0.0281       = Validation score (-WQL)
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	0.02    s     = Training runtime
	2.07    s     = Validation (prediction) runtime
	2.07    s     = Validation (prediction) runtime
	2.07    s     = Validation (prediction) runtime
	2.07    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ChronosZeroShot[bolt_base]']
Training complete. Models trained: ['ChronosZeroShot[bolt_base]']
Training complete. Models trained: ['ChronosZeroShot[bolt_base]']
Training complete. Models trained: ['ChronosZeroShot[bolt_base]']
Total runtime: 2.11 s
Total runtime: 2.11 s
Total runtime: 2.11 s
Total runtime: 2.11 s
Best model: ChronosZeroShot[bolt_base]
Best model: ChronosZeroShot[bolt_base]
Best model: ChronosZeroShot[bolt_base]
Best model: ChronosZeroShot[bolt_base]
Best model score: -0.0281
Best model score: -0.0281
Best model score: -0.0281
Best model score: -0.0281
Model not specified in predict, will default to the model with the best validation score: ChronosZeroShot[bolt_base]
Model not specified in predict, will default to the model with the best validation score: ChronosZeroShot[bolt_base]
Model not specified in predict, will default to the model with the best validation score: ChronosZeroShot[bolt_base]
Model not specified in predict, will default to the model with the best validation score: ChronosZeroShot[bolt_base]
Warning: path already exists! This predictor may overwrite an existing predictor! path="./chronos_models/bel_bolt_base_with_indicators"
Warning: path already exists! This predictor may overwrite an existing predictor! path="./chronos_models/bel_bolt_base_with_indicators"
Warning: path already exists! This predictor may overwrite an existing predictor! path="./chronos_models/bel_bolt_base_with_indicators"
Warning: path already exists! This predictor may overwrite an existing predictor! path="./chronos_models/bel_bolt_base_with_indicators"
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
Beginning AutoGluon training... Time limit = 600s
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
AutoGluon will save models to '/workspaces/Market/chronos_models/bel_bolt_base_with_indicators'
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       11.52 GB / 23.31 GB (49.4%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       11.52 GB / 23.31 GB (49.4%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       11.52 GB / 23.31 GB (49.4%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       11.52 GB / 23.31 GB (49.4%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
=================== System Info ===================
AutoGluon Version:  1.4.0
Python Version:     3.11.11
Operating System:   Linux
Platform Machine:   x86_64
Platform Version:   #29~24.04.1-Ubuntu SMP PREEMPT_DYNAMIC Thu Aug 14 16:52:50 UTC 2
CPU Count:          8
GPU Count:          1
Memory Avail:       11.52 GB / 23.31 GB (49.4%)
Disk Space Avail:   357.68 GB / 931.51 GB (38.4%)
===================================================
Setting presets to: bolt_base
Setting presets to: bolt_base
Setting presets to: bolt_base
Setting presets to: bolt_base
Setting presets to: bolt_base

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': [{'ag_args': {'name_suffix': 'ZeroShot'},
                                  'model_path': 'bolt_base'}]},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 2,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': [{'ag_args': {'name_suffix': 'ZeroShot'},
                                  'model_path': 'bolt_base'}]},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 2,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': [{'ag_args': {'name_suffix': 'ZeroShot'},
                                  'model_path': 'bolt_base'}]},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 2,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': [{'ag_args': {'name_suffix': 'ZeroShot'},
                                  'model_path': 'bolt_base'}]},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 2,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

{'enable_ensemble': True,
 'eval_metric': WQL,
 'freq': 'D',
 'hyperparameters': {'Chronos': [{'ag_args': {'name_suffix': 'ZeroShot'},
                                  'model_path': 'bolt_base'}]},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 2,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 600,
 'verbosity': 2}

Provided train_data has 332 rows (NaN fraction=31.6%), 1 time series. Median time series length is 332 (min=332, max=332). 
Provided train_data has 332 rows (NaN fraction=31.6%), 1 time series. Median time series length is 332 (min=332, max=332). 
Provided train_data has 332 rows (NaN fraction=31.6%), 1 time series. Median time series length is 332 (min=332, max=332). 
Provided train_data has 332 rows (NaN fraction=31.6%), 1 time series. Median time series length is 332 (min=332, max=332). 
Provided train_data has 332 rows (NaN fraction=31.6%), 1 time series. Median time series length is 332 (min=332, max=332). 

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:

Provided data contains following columns:
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	target: 'target'
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
	past_covariates:
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		categorical:        []
		continuous (float): ['RSI', 'RSI_7', 'stoch_k', 'stoch_d', 'williams_r', 'MACD', ...]
		continuous (float): ['RSI', 'RSI_7', 'stoch_k', 'stoch_d', 'williams_r', 'MACD', ...]
		continuous (float): ['RSI', 'RSI_7', 'stoch_k', 'stoch_d', 'williams_r', 'MACD', ...]
		continuous (float): ['RSI', 'RSI_7', 'stoch_k', 'stoch_d', 'williams_r', 'MACD', ...]
		continuous (float): ['RSI', 'RSI_7', 'stoch_k', 'stoch_d', 'williams_r', 'MACD', ...]

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

To learn how to fix incorrectly inferred types, please see documentation for TimeSeriesPredictor.fit

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'

AutoGluon will gauge predictive performance using evaluation metric: 'WQL'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================
===================================================
===================================================
===================================================
===================================================

Starting training. Start time is 2025-09-14 19:07:55

Starting training. Start time is 2025-09-14 19:07:55

Starting training. Start time is 2025-09-14 19:07:55

Starting training. Start time is 2025-09-14 19:07:55

Starting training. Start time is 2025-09-14 19:07:55
Models that will be trained: ['ChronosZeroShot[bolt_base]']
Models that will be trained: ['ChronosZeroShot[bolt_base]']
Models that will be trained: ['ChronosZeroShot[bolt_base]']
Models that will be trained: ['ChronosZeroShot[bolt_base]']
Models that will be trained: ['ChronosZeroShot[bolt_base]']
Training timeseries model ChronosZeroShot[bolt_base]. Training for up to 599.9s of the 599.9s of remaining time.
Training timeseries model ChronosZeroShot[bolt_base]. Training for up to 599.9s of the 599.9s of remaining time.
Training timeseries model ChronosZeroShot[bolt_base]. Training for up to 599.9s of the 599.9s of remaining time.
Training timeseries model ChronosZeroShot[bolt_base]. Training for up to 599.9s of the 599.9s of remaining time.
Training timeseries model ChronosZeroShot[bolt_base]. Training for up to 599.9s of the 599.9s of remaining time.
	-0.0243       = Validation score (-WQL)
	-0.0243       = Validation score (-WQL)
	-0.0243       = Validation score (-WQL)
	-0.0243       = Validation score (-WQL)
	-0.0243       = Validation score (-WQL)
	0.05    s     = Training runtime
	0.05    s     = Training runtime
	0.05    s     = Training runtime
	0.05    s     = Training runtime
	0.05    s     = Training runtime
	1.99    s     = Validation (prediction) runtime
	1.99    s     = Validation (prediction) runtime
	1.99    s     = Validation (prediction) runtime
	1.99    s     = Validation (prediction) runtime
	1.99    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['ChronosZeroShot[bolt_base]']
Training complete. Models trained: ['ChronosZeroShot[bolt_base]']
Training complete. Models trained: ['ChronosZeroShot[bolt_base]']
Training complete. Models trained: ['ChronosZeroShot[bolt_base]']
Training complete. Models trained: ['ChronosZeroShot[bolt_base]']
Total runtime: 2.08 s
Total runtime: 2.08 s
Total runtime: 2.08 s
Total runtime: 2.08 s
Total runtime: 2.08 s
Best model: ChronosZeroShot[bolt_base]
Best model: ChronosZeroShot[bolt_base]
Best model: ChronosZeroShot[bolt_base]
Best model: ChronosZeroShot[bolt_base]
Best model: ChronosZeroShot[bolt_base]
Best model score: -0.0243
Best model score: -0.0243
Best model score: -0.0243
Best model score: -0.0243
Best model score: -0.0243
Model not specified in predict, will default to the model with the best validation score: ChronosZeroShot[bolt_base]
Model not specified in predict, will default to the model with the best validation score: ChronosZeroShot[bolt_base]
Model not specified in predict, will default to the model with the best validation score: ChronosZeroShot[bolt_base]
Model not specified in predict, will default to the model with the best validation score: ChronosZeroShot[bolt_base]
Model not specified in predict, will default to the model with the best validation score: ChronosZeroShot[bolt_base]
